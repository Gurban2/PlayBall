import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';

class FirebaseTestService {
  static Future<void> testFirebaseConnection() async {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é Firebase
      debugPrint('üî• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase...');
      final app = Firebase.app();
      debugPrint('‚úÖ Firebase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω: ${app.name}');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Firestore —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
      debugPrint('üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firestore...');
      final firestore = FirebaseFirestore.instance;
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Firestore –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è WebChannel –æ—à–∏–±–æ–∫
      firestore.settings = const Settings(
        persistenceEnabled: false,
        cacheSizeBytes: Settings.CACHE_SIZE_UNLIMITED,
        sslEnabled: true,
      );
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∞–µ–º —Å–µ—Ç—å –∏ –∂–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
      try {
        await firestore.enableNetwork();
        debugPrint('üì° Firestore —Å–µ—Ç—å –≤–∫–ª—é—á–µ–Ω–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ');
        
        // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        await Future.delayed(const Duration(milliseconds: 500));
      } catch (e) {
        debugPrint('‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ —Å–µ—Ç–∏: $e');
      }
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—Ç—ã–º —á—Ç–µ–Ω–∏–µ–º (–º–µ–Ω–µ–µ –Ω–∞–≥—Ä—É–∂–∞–µ—Ç API)
      debugPrint('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á—Ç–µ–Ω–∏—è –∏–∑ Firestore...');
      try {
        await firestore.collection('test').doc('connection').get().timeout(
          const Duration(seconds: 8),
          onTimeout: () {
            throw Exception('–¢–∞–π–º–∞—É—Ç –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∏–∑ Firestore (8 —Å–µ–∫—É–Ω–¥)');
          },
        );
        debugPrint('‚úÖ –ß—Ç–µ–Ω–∏–µ –∏–∑ Firestore —Ä–∞–±–æ—Ç–∞–µ—Ç');
      } catch (e) {
        if (e.toString().contains('400') || e.toString().contains('Bad Request')) {
          debugPrint('üö´ –û—à–∏–±–∫–∞ 400 Bad Request - –ø—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–ø—Ä–æ—Å–æ–º –∫ Firestore');
          debugPrint('üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
          debugPrint('   1. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏');
          debugPrint('   2. –ü—Ä–æ–±–ª–µ–º—ã —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π');
          debugPrint('   3. –ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞');
          throw Exception('Firestore API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É 400. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.');
        }
        rethrow;
      }
      
      // –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ —á—Ç–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ, –ø—Ä–æ–±—É–µ–º –∑–∞–ø–∏—Å—å
      debugPrint('üìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ Firestore...');
      try {
        await firestore.collection('test').doc('connection').set({
          'timestamp': FieldValue.serverTimestamp(),
          'message': '–¢–µ—Å—Ç–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!',
          'userAgent': 'Flutter Web App',
          'testType': 'basic_connection',
          'apiTest': true,
        }).timeout(
          const Duration(seconds: 10),
          onTimeout: () {
            throw Exception('–¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ Firestore (10 —Å–µ–∫—É–Ω–¥)');
          },
        );
        debugPrint('‚úÖ –ó–∞–ø–∏—Å—å –≤ Firestore —Ä–∞–±–æ—Ç–∞–µ—Ç');
      } catch (e) {
        if (e.toString().contains('400') || e.toString().contains('Bad Request')) {
          debugPrint('üö´ –û—à–∏–±–∫–∞ 400 –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ - –ø—Ä–æ–±–ª–µ–º–∞ —Å Write API');
          debugPrint('üí° –†–µ—à–µ–Ω–∏—è:');
          debugPrint('   1. –†–∞–∑–≤–µ—Ä–Ω–∏—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: deploy_firestore_rules.bat');
          debugPrint('   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –≤ Firebase Console');
          debugPrint('   3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Firestore –≤–∫–ª—é—á–µ–Ω –≤ –ø—Ä–æ–µ–∫—Ç–µ');
          throw Exception('Firestore Write API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.');
        }
        rethrow;
      }
      
      debugPrint('‚úÖ Firestore —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º Firebase Auth
      debugPrint('üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ Firebase Auth...');
      final auth = FirebaseAuth.instance;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Authentication
      try {
        // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ (—ç—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é)
        await auth.fetchSignInMethodsForEmail('test@example.com').timeout(
          const Duration(seconds: 5),
          onTimeout: () {
            throw Exception('–¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ Auth –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
          },
        );
        debugPrint('‚úÖ Firebase Auth –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞');
      } catch (e) {
        if (e.toString().contains('configuration-not-found')) {
          debugPrint('‚ùå Firebase Auth –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ –ø—Ä–æ–µ–∫—Ç–µ');
          debugPrint('üí° –†–µ—à–µ–Ω–∏–µ: –í–∫–ª—é—á–∏—Ç–µ Authentication –≤ Firebase Console');
          debugPrint('   1. –û—Ç–∫—Ä–æ–π—Ç–µ https://console.firebase.google.com/project/volleyball-a7d8d/authentication');
          debugPrint('   2. –ù–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É"');
          debugPrint('   3. –í–∫–ª—é—á–∏—Ç–µ Email/Password –≤ Sign-in method');
          throw Exception('Firebase Auth –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –í–∫–ª—é—á–∏—Ç–µ Authentication –≤ Firebase Console.');
        } else {
          debugPrint('‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ Auth: $e');
        }
      }
      
      debugPrint('‚úÖ Firebase Auth –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
      debugPrint('üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${auth.currentUser?.email ?? "–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"}');
      
      debugPrint('üéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã Firebase —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
      
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Firebase: $e');
      
      // –£–ª—É—á—à–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫
      if (e.toString().contains('PERMISSION_DENIED')) {
        debugPrint('üîí –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ Firestore.');
        debugPrint('üí° –†–µ—à–µ–Ω–∏–µ: –†–∞–∑–≤–µ—Ä–Ω–∏—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥–æ–π: deploy_firestore_rules.bat');
      } else if (e.toString().contains('400') || e.toString().contains('Bad Request')) {
        debugPrint('üö´ –û—à–∏–±–∫–∞ 400 Bad Request –æ—Ç Firestore API.');
        debugPrint('üí° –†–µ—à–µ–Ω–∏—è:');
        debugPrint('   1. –†–∞–∑–≤–µ—Ä–Ω–∏—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: deploy_firestore_rules.bat');
        debugPrint('   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ Firestore –≤–∫–ª—é—á–µ–Ω –≤ Firebase Console');
        debugPrint('   3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–æ–µ–∫—Ç volleyball-a7d8d —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
        debugPrint('   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á–∏ –≤ firebase_options.dart');
      } else if (e.toString().contains('UNAVAILABLE') || e.toString().contains('WebChannel')) {
        debugPrint('üåê –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç–µ–≤—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ Firebase.');
        debugPrint('üí° –†–µ—à–µ–Ω–∏—è:');
        debugPrint('   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
        debugPrint('   2. –û—Ç–∫–ª—é—á–∏—Ç–µ VPN –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è');
        debugPrint('   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä–∞');
        debugPrint('   4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
      } else if (e.toString().contains('timeout')) {
        debugPrint('‚è∞ –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firebase.');
        debugPrint('üí° –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è');
      } else if (e.toString().contains('transport errored')) {
        debugPrint('üö´ –û—à–∏–±–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ WebChannel.');
        debugPrint('üí° –†–µ—à–µ–Ω–∏—è:');
        debugPrint('   1. –û—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞');
        debugPrint('   2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –±—Ä–∞—É–∑–µ—Ä');
        debugPrint('   3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
      }
      
      rethrow;
    }
  }
  
  static Future<void> testFirestoreOperations() async {
    try {
      final firestore = FirebaseFirestore.instance;
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç—ã –∏ –æ—Ç–∫–ª—é—á–∞–µ–º persistence
      firestore.settings = const Settings(
        persistenceEnabled: false,
        cacheSizeBytes: Settings.CACHE_SIZE_UNLIMITED,
        sslEnabled: true,
      );
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∞–µ–º —Å–µ—Ç—å –ø–µ—Ä–µ–¥ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏
      try {
        await firestore.enableNetwork();
        // –ñ–¥–µ–º —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        await Future.delayed(const Duration(milliseconds: 1000));
      } catch (e) {
        debugPrint('‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ —Å–µ—Ç–∏: $e');
      }
      
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API –ø—Ä–æ—Å—Ç—ã–º —á—Ç–µ–Ω–∏–µ–º
      debugPrint('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Firestore API...');
      try {
        await firestore.collection('test_rooms').limit(1).get().timeout(
          const Duration(seconds: 5),
          onTimeout: () {
            throw Exception('API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - —Ç–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ');
          },
        );
        debugPrint('‚úÖ Firestore API –¥–æ—Å—Ç—É–ø–µ–Ω');
      } catch (e) {
        if (e.toString().contains('400')) {
          debugPrint('üö´ Firestore API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É 400');
          debugPrint('üí° –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –ø—Ä–æ–±–ª–µ–º–∞ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏');
          throw Exception('Firestore API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (400). –†–∞–∑–≤–µ—Ä–Ω–∏—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.');
        }
        rethrow;
      }
      
      // –¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
      debugPrint('üìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ Firestore...');
      DocumentReference? docRef;
      try {
        docRef = await firestore.collection('test_rooms').add({
          'title': '–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–Ω–∞—Ç–∞',
          'description': '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–Ω–∞—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Firestore',
          'createdAt': FieldValue.serverTimestamp(),
          'status': 'active',
          'testId': DateTime.now().millisecondsSinceEpoch,
          'webChannelTest': true,
          'apiVersion': 'v1',
        }).timeout(
          const Duration(seconds: 12),
          onTimeout: () {
            throw Exception('–¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ Firestore. –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å Write API.');
          },
        );
        
        debugPrint('‚úÖ –ó–∞–ø–∏—Å—å –≤ Firestore —É—Å–ø–µ—à–Ω–∞. ID –¥–æ–∫—É–º–µ–Ω—Ç–∞: ${docRef.id}');
      } catch (e) {
        if (e.toString().contains('400') || e.toString().contains('Bad Request')) {
          debugPrint('üö´ –û—à–∏–±–∫–∞ 400 –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ test_rooms');
          debugPrint('üí° –ü—Ä–æ–±–ª–µ–º–∞ —Å Write API –∏–ª–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏');
          throw Exception('Write API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ Firestore.');
        }
        rethrow;
      }
      
      // –¢–µ—Å—Ç —á—Ç–µ–Ω–∏—è —Å —Ç–∞–π–º–∞—É—Ç–æ–º
      debugPrint('üìñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á—Ç–µ–Ω–∏—è –∏–∑ Firestore...');
      final snapshot = await firestore
          .collection('test_rooms')
          .orderBy('createdAt', descending: true)
          .limit(3)
          .get()
          .timeout(
        const Duration(seconds: 8),
        onTimeout: () {
          throw Exception('–¢–∞–π–º–∞—É—Ç –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∏–∑ Firestore. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ç–µ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.');
        },
      );
      
      debugPrint('‚úÖ –ß—Ç–µ–Ω–∏–µ –∏–∑ Firestore —É—Å–ø–µ—à–Ω–æ. –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: ${snapshot.docs.length}');
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
      for (var doc in snapshot.docs) {
        final data = doc.data();
        debugPrint('üìÑ –î–æ–∫—É–º–µ–Ω—Ç ${doc.id}: ${data['title'] ?? '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}');
      }
      
      // –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ (–µ—Å–ª–∏ –æ–Ω –±—ã–ª —Å–æ–∑–¥–∞–Ω)
      debugPrint('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞...');
      try {
        await docRef.delete().timeout(
          const Duration(seconds: 5),
          onTimeout: () {
            throw Exception('–¢–∞–π–º–∞—É—Ç –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞');
          },
        );
        debugPrint('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç —É–¥–∞–ª–µ–Ω');
      } catch (e) {
        debugPrint('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç: $e');
        // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º —Ç–µ—Å—Ç –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
      }
          
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π Firestore: $e');
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
      if (e.toString().contains('indexes')) {
        debugPrint('üìá –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∏–Ω–¥–µ–∫—Å—ã –≤ Firestore Console.');
      } else if (e.toString().contains('400') || e.toString().contains('Bad Request')) {
        debugPrint('üö´ –û—à–∏–±–∫–∞ 400 Bad Request –æ—Ç Firestore.');
        debugPrint('üí° –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:');
        debugPrint('   1. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Ä–∞–∑–≤–µ—Ä–Ω–∏—Ç–µ –ø—Ä–∞–≤–∏–ª–∞: deploy_firestore_rules.bat');
        debugPrint('   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ Firestore –≤–∫–ª—é—á–µ–Ω –≤ –ø—Ä–æ–µ–∫—Ç–µ');
        debugPrint('   3. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ API –∫–ª—é—á–µ–π');
      } else if (e.toString().contains('WebChannel') || e.toString().contains('transport')) {
        debugPrint('üö´ –ü—Ä–æ–±–ª–µ–º–∞ —Å WebChannel —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–æ–º.');
        debugPrint('üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:');
        debugPrint('   1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
        debugPrint('   2. –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞');
        debugPrint('   3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ç–∏');
      }
      
      rethrow;
    }
  }
  
  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firebase —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
  static Future<bool> checkNetworkConnection() async {
    try {
      debugPrint('üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firebase...');
      
      final firestore = FirebaseFirestore.instance;
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Firestore –¥–ª—è –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
      firestore.settings = const Settings(
        persistenceEnabled: false,
        cacheSizeBytes: 1048576, // 1MB –∫—ç—à –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        sslEnabled: true,
      );
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∞–µ–º —Å–µ—Ç—å
      await firestore.enableNetwork();
      
      // –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å –æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∏–º —Ç–∞–π–º–∞—É—Ç–æ–º
      await firestore.collection('_test_connection').doc('ping').get().timeout(
        const Duration(seconds: 5),
        onTimeout: () {
          throw Exception('–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firebase (—Ç–∞–π–º–∞—É—Ç 5 —Å–µ–∫)');
        },
      );
      
      debugPrint('‚úÖ –°–µ—Ç–µ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Firebase —Ä–∞–±–æ—Ç–∞–µ—Ç');
      return true;
    } catch (e) {
      debugPrint('‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç–µ–≤—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º: $e');
      
      if (e.toString().contains('400') || e.toString().contains('Bad Request')) {
        debugPrint('üö´ API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É 400 - –ø—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π');
        debugPrint('üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
        debugPrint('   1. –†–∞–∑–≤–µ—Ä–Ω–∏—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ Firestore');
        debugPrint('   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞');
        debugPrint('   3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Firestore –≤–∫–ª—é—á–µ–Ω');
      } else if (e.toString().contains('WebChannel') || e.toString().contains('transport')) {
        debugPrint('üö´ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å WebChannel —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–æ–º');
        debugPrint('üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
        debugPrint('   1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
        debugPrint('   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è');
        debugPrint('   3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –±—Ä–∞—É–∑–µ—Ä');
      }
      
      return false;
    }
  }
  
  /// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π Firestore
  static Future<void> resetFirestoreConnection() async {
    try {
      debugPrint('üîÑ –°–±—Ä–æ—Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è Firestore...');
      final firestore = FirebaseFirestore.instance;
      
      // –û—Ç–∫–ª—é—á–∞–µ–º —Å–µ—Ç—å
      await firestore.disableNetwork();
      debugPrint('üì¥ –°–µ—Ç—å Firestore –æ—Ç–∫–ª—é—á–µ–Ω–∞');
      
      // –ñ–¥–µ–º –¥–æ–ª—å—à–µ –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
      await Future.delayed(const Duration(seconds: 2));
      
      // –í–∫–ª—é—á–∞–µ–º —Å–µ—Ç—å –∑–∞–Ω–æ–≤–æ
      await firestore.enableNetwork();
      debugPrint('üì° –°–µ—Ç—å Firestore –≤–∫–ª—é—á–µ–Ω–∞ –∑–∞–Ω–æ–≤–æ');
      
      // –ñ–¥–µ–º —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏
      await Future.delayed(const Duration(seconds: 1));
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–∞–Ω–æ–≤–æ —Å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
      firestore.settings = const Settings(
        persistenceEnabled: false,
        cacheSizeBytes: Settings.CACHE_SIZE_UNLIMITED,
        sslEnabled: true,
      );
      
      debugPrint('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ Firestore —Å–±—Ä–æ—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: $e');
    }
  }
  
  /// –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫ Firebase Authentication
  static Future<void> diagnoseAuthError() async {
    try {
      debugPrint('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Firebase Authentication...');
      
      final auth = FirebaseAuth.instance;
      
      debugPrint('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Authentication:');
      debugPrint('   App: ${Firebase.app().name}');
      debugPrint('   Project ID: ${Firebase.app().options.projectId}');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Authentication API
      try {
        await auth.fetchSignInMethodsForEmail('test@example.com').timeout(
          const Duration(seconds: 3),
        );
        debugPrint('‚úÖ Authentication API –¥–æ—Å—Ç—É–ø–µ–Ω');
      } catch (e) {
        if (e.toString().contains('configuration-not-found')) {
          debugPrint('‚ùå Authentication –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ –ø—Ä–æ–µ–∫—Ç–µ');
          debugPrint('üí° –ö–†–ò–¢–ò–ß–ù–û: –í–∫–ª—é—á–∏—Ç–µ Authentication –≤ Firebase Console:');
          debugPrint('   1. https://console.firebase.google.com/project/volleyball-a7d8d/authentication');
          debugPrint('   2. –ù–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É"');
          debugPrint('   3. –í–∫–ª—é—á–∏—Ç–µ Email/Password –≤ Sign-in method');
        } else if (e.toString().contains('auth/invalid-api-key')) {
          debugPrint('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á –¥–ª—è Authentication');
          debugPrint('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á –≤ firebase_options.dart');
        } else {
          debugPrint('‚ùå –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ Authentication: $e');
        }
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      final currentUser = auth.currentUser;
      if (currentUser != null) {
        debugPrint('üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:');
        debugPrint('   Email: ${currentUser.email}');
        debugPrint('   UID: ${currentUser.uid}');
        debugPrint('   Verified: ${currentUser.emailVerified}');
      } else {
        debugPrint('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      }
      
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ Authentication: $e');
    }
  }

  /// –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫ 400 Bad Request
  static Future<void> diagnose400Error() async {
    try {
      debugPrint('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–∫–∏ 400 Bad Request...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Firebase
      final app = Firebase.app();
      final options = app.options;
      
      debugPrint('üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase:');
      debugPrint('   Project ID: ${options.projectId}');
      debugPrint('   API Key: ${options.apiKey.substring(0, 10)}...');
      debugPrint('   Auth Domain: ${options.authDomain}');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞
      final firestore = FirebaseFirestore.instance;
      
      debugPrint('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞...');
      try {
        // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
        await firestore.collection('_system').doc('test').get().timeout(
          const Duration(seconds: 3),
        );
        debugPrint('‚úÖ –ü—Ä–æ–µ–∫—Ç –¥–æ—Å—Ç—É–ø–µ–Ω');
      } catch (e) {
        if (e.toString().contains('400')) {
          debugPrint('‚ùå –ü—Ä–æ–µ–∫—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (400)');
          debugPrint('üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
          debugPrint('   1. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Project ID –≤ firebase_options.dart');
          debugPrint('   2. Firestore –Ω–µ –≤–∫–ª—é—á–µ–Ω –≤ –ø—Ä–æ–µ–∫—Ç–µ');
          debugPrint('   3. –ù–µ–≤–µ—Ä–Ω—ã–µ API –∫–ª—é—á–∏');
          debugPrint('   4. –ü—Ä–æ–µ–∫—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ —É–¥–∞–ª–µ–Ω');
        } else {
          debugPrint('‚ö†Ô∏è –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–æ–µ–∫—Ç–∞: $e');
        }
      }
      
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ: $e');
    }
  }
} 