import 'package:flutter/material.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'firebase_options.dart';
import 'core/router/app_router.dart';
import 'core/constants/constants.dart';
import 'core/theme/app_theme.dart';
import 'features/dashboard/presentation/screens/firebase_test_screen.dart';
import 'features/design_demo/design_demo_screen.dart';
import 'shared/widgets/enhanced_widgets.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  
  // –ë–ª–æ–∫–∏—Ä—É–µ–º –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é —ç–∫—Ä–∞–Ω–∞ –≤ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–º –ø–æ–ª–æ–∂–µ–Ω–∏–∏
  await SystemChrome.setPreferredOrientations([
    DeviceOrientation.portraitUp,
    DeviceOrientation.portraitDown,
  ]);
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  
  // Firebase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ
  if (kDebugMode) {
    debugPrint('‚úÖ Firebase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
  }
  
  runApp(const ProviderScope(child: MyApp()));
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp.router(
      title: AppStrings.appName,
      
      // === –ü–†–ò–ú–ï–ù–Ø–ï–ú –ù–û–í–£–Æ –¢–ï–ú–£ MATERIAL DESIGN 3 ===
      theme: AppTheme.lightTheme,
      darkTheme: AppTheme.darkTheme,
      themeMode: ThemeMode.system, // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
      
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
      debugShowCheckedModeBanner: false,
      
      routerConfig: AppRouter.router,
      
      // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ü–≤–µ—Ç–∞ –Ω–∞ —Å—Ç–∞—Ç—É—Å-–±–∞—Ä
      builder: (context, child) {
        final colorScheme = Theme.of(context).colorScheme;
        AppTheme.setSystemUIOverlayStyle(colorScheme);
        return child!;
      },
    );
  }
}

class HomePage extends StatefulWidget {
  const HomePage({super.key});

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage>
    with SingleTickerProviderStateMixin {
  
  late AnimationController _animationController;

  @override
  void initState() {
    super.initState();
    _animationController = AnimationController(
      duration: const Duration(milliseconds: 800),
      vsync: this,
    );
    _animationController.forward();
  }

  @override
  void dispose() {
    _animationController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Theme.of(context).colorScheme.background,
      appBar: AppBar(
        title: Row(
          children: [
            Icon(
              Icons.sports_volleyball,
              color: Theme.of(context).colorScheme.primary,
            ),
            const SizedBox(width: 8),
            const Text('PlayBall'),
          ],
        ),
        centerTitle: false,
        elevation: 0,
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(24),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
            AnimatedBuilder(
              animation: _animationController,
              builder: (context, child) {
                return Transform.translate(
                  offset: Offset(0, 50 * (1 - _animationController.value)),
                  child: Opacity(
                    opacity: _animationController.value,
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text(
                          '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üèê',
                          style: Theme.of(context).textTheme.headlineMedium?.copyWith(
                            fontWeight: FontWeight.bold,
                            color: Theme.of(context).colorScheme.primary,
                          ),
                        ),
                        const SizedBox(height: 8),
                        Text(
                          '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤–æ–ª–µ–π–±–æ–ª—å–Ω—ã—Ö –∏–≥—Ä —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º',
                          style: Theme.of(context).textTheme.bodyLarge?.copyWith(
                            color: Theme.of(context).colorScheme.onSurfaceVariant,
                          ),
                        ),
                      ],
                    ),
                  ),
                );
              },
            ),
            
            const SizedBox(height: 32),
            
            // –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
            AnimatedBuilder(
              animation: _animationController,
              builder: (context, child) {
                return Transform.translate(
                  offset: Offset(0, 100 * (1 - _animationController.value)),
                  child: Opacity(
                    opacity: _animationController.value,
                    child: GridView.count(
                      shrinkWrap: true,
                      physics: const NeverScrollableScrollPhysics(),
                      crossAxisCount: 2,
                      childAspectRatio: 1.3,
                      mainAxisSpacing: 16,
                      crossAxisSpacing: 16,
                      children: [
                        StatsCard(
                          title: '–ê–∫—Ç–∏–≤–Ω—ã–µ –∏–≥—Ä—ã',
                          value: '12',
                          icon: Icons.sports_volleyball,
                          color: Theme.of(context).colorScheme.primary,
                          subtitle: '–°–µ–≥–æ–¥–Ω—è',
                        ),
                        StatsCard(
                          title: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
                          value: '2.4K',
                          icon: Icons.people,
                          color: AppTheme.successColor,
                          subtitle: '–û–Ω–ª–∞–π–Ω',
                        ),
                        StatsCard(
                          title: '–ö–æ–º–∞–Ω–¥—ã',
                          value: '89',
                          icon: Icons.groups,
                          color: Theme.of(context).colorScheme.secondary,
                          subtitle: '–°–æ–∑–¥–∞–Ω—ã',
                        ),
                        StatsCard(
                          title: '–¢—É—Ä–Ω–∏—Ä—ã',
                          value: '24',
                          icon: Icons.emoji_events,
                          color: AppTheme.warningColor,
                          subtitle: '–í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ',
                        ),
                      ],
                    ),
                  ),
                );
              },
            ),
            
            const SizedBox(height: 32),
            
            // –î–µ–π—Å—Ç–≤–∏—è
            AnimatedBuilder(
              animation: _animationController,
              builder: (context, child) {
                return Transform.translate(
                  offset: Offset(0, 150 * (1 - _animationController.value)),
                  child: Opacity(
                    opacity: _animationController.value,
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.stretch,
                      children: [
                        Text(
                          '–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è',
                          style: Theme.of(context).textTheme.titleLarge?.copyWith(
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                        const SizedBox(height: 16),
                        
                        EnhancedButton(
                          text: '–í–æ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
                          icon: Icons.login,
                          isFullWidth: true,
                          onPressed: () {
                            // TODO: –î–æ–±–∞–≤–∏—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é –Ω–∞ —ç–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                            _showMessage('–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
                          },
                        ),
                        
                        const SizedBox(height: 12),
                        
                        EnhancedButton(
                          text: '–î–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º–∞',
                          icon: Icons.palette,
                          type: ButtonType.secondary,
                          isFullWidth: true,
                          onPressed: () {
                            Navigator.push(
                              context,
                              MaterialPageRoute(
                                builder: (context) => const DesignDemoScreen(),
                              ),
                            );
                          },
                        ),
                        
                        const SizedBox(height: 12),
                        
                        EnhancedButton(
                          text: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å Firebase',
                          icon: Icons.cloud,
                          type: ButtonType.tertiary,
                          customColor: Colors.orange,
                          isFullWidth: true,
                          onPressed: () {
                            Navigator.push(
                              context,
                              MaterialPageRoute(
                                builder: (context) => const FirebaseTestScreen(),
                              ),
                            );
                          },
                        ),
                      ],
                    ),
                  ),
                );
              },
            ),
            
            const SizedBox(height: 32),
            
            // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞
            AnimatedBuilder(
              animation: _animationController,
              builder: (context, child) {
                final delay = const Duration(milliseconds: 400);
                final delayedAnimation = Tween<double>(
                  begin: 0,
                  end: 1,
                ).animate(CurvedAnimation(
                  parent: _animationController,
                  curve: Interval(
                    delay.inMilliseconds / _animationController.duration!.inMilliseconds,
                    1.0,
                    curve: Curves.easeOut,
                  ),
                ));
                
                return Transform.translate(
                  offset: Offset(0, 50 * (1 - delayedAnimation.value)),
                  child: Opacity(
                    opacity: delayedAnimation.value,
                    child: EnhancedCard(
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Row(
                            children: [
                              Container(
                                padding: const EdgeInsets.all(12),
                                decoration: BoxDecoration(
                                  color: Theme.of(context).colorScheme.primaryContainer,
                                  borderRadius: BorderRadius.circular(12),
                                ),
                                child: Icon(
                                  Icons.info_outline,
                                  color: Theme.of(context).colorScheme.primary,
                                ),
                              ),
                              const SizedBox(width: 16),
                              Expanded(
                                child: Column(
                                  crossAxisAlignment: CrossAxisAlignment.start,
                                  children: [
                                    Text(
                                      '–ù–æ–≤—ã–π –¥–∏–∑–∞–π–Ω!',
                                      style: Theme.of(context).textTheme.titleMedium?.copyWith(
                                        fontWeight: FontWeight.bold,
                                      ),
                                    ),
                                    Text(
                                      'Material Design 3',
                                      style: Theme.of(context).textTheme.bodySmall,
                                    ),
                                  ],
                                ),
                              ),
                            ],
                          ),
                          const SizedBox(height: 16),
                          Text(
                            '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ —Å –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π –¥–∏–∑–∞–π–Ω–∞ Material Design 3. '
                            '–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –∏ '
                            '–∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏.',
                            style: Theme.of(context).textTheme.bodyMedium,
                          ),
                        ],
                      ),
                    ),
                  ),
                );
              },
            ),
          ],
        ),
      ),
    );
  }

  void _showMessage(String message) {
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Row(
          children: [
            const Icon(Icons.info, color: Colors.white),
            const SizedBox(width: 12),
            Text(message),
          ],
        ),
        behavior: SnackBarBehavior.floating,
      ),
    );
  }
} 