import 'package:cloud_firestore/cloud_firestore.dart';

/// –¢–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∏–≥—Ä–∞–º–∏
enum GameNotificationType {
  gameCreated,      // –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –∏–≥—Ä–∞
  gameUpdated,      // –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∏–≥—Ä–µ
  gameStarting,     // –ò–≥—Ä–∞ —Å–∫–æ—Ä–æ –Ω–∞—á–Ω–µ—Ç—Å—è
  gameStarted,      // –ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å
  gameEnded,        // –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
  gameCancelled,    // –ò–≥—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞
  playerJoined,     // –ò–≥—Ä–æ–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è
  playerLeft,       // –ò–≥—Ä–æ–∫ –ø–æ–∫–∏–Ω—É–ª –∏–≥—Ä—É
  teamFormed,       // –ö–æ–º–∞–Ω–¥–∞ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞
  teamChanged,      // –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–º–∞–Ω–¥–µ
}

/// –ú–æ–¥–µ–ª—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∏–≥—Ä–∞—Ö
class GameNotificationModel {
  final String id;
  final String roomId;
  final String roomTitle;
  final String organizerId;
  final String organizerName;
  final List<String> recipientIds;
  final GameNotificationType type;
  final String title;
  final String message;
  final DateTime createdAt;
  final DateTime? scheduledDateTime;
  final Map<String, dynamic>? additionalData;
  final bool isRead;

  GameNotificationModel({
    required this.id,
    required this.roomId,
    required this.roomTitle,
    required this.organizerId,
    required this.organizerName,
    required this.recipientIds,
    required this.type,
    required this.title,
    required this.message,
    required this.createdAt,
    this.scheduledDateTime,
    this.additionalData,
    this.isRead = false,
  });

  // –§–∞–±—Ä–∏—á–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

  /// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–π –∏–≥—Ä—ã
  factory GameNotificationModel.gameCreated({
    required String id,
    required String roomId,
    required String roomTitle,
    required String organizerId,
    required String organizerName,
    required List<String> recipientIds,
    required DateTime scheduledDateTime,
    required String location,
  }) {
    return GameNotificationModel(
      id: id,
      roomId: roomId,
      roomTitle: roomTitle,
      organizerId: organizerId,
      organizerName: organizerName,
      recipientIds: recipientIds,
      type: GameNotificationType.gameCreated,
      title: 'üèê –ù–æ–≤–∞—è –∏–≥—Ä–∞!',
      message: '$organizerName —Å–æ–∑–¥–∞–ª –∏–≥—Ä—É "$roomTitle"',
      createdAt: DateTime.now(),
      scheduledDateTime: scheduledDateTime,
      additionalData: {'location': location},
    );
  }

  /// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ –∏–≥—Ä–µ
  factory GameNotificationModel.gameUpdated({
    required String id,
    required String roomId,
    required String roomTitle,
    required String organizerId,
    required String organizerName,
    required List<String> recipientIds,
    required String changes,
  }) {
    return GameNotificationModel(
      id: id,
      roomId: roomId,
      roomTitle: roomTitle,
      organizerId: organizerId,
      organizerName: organizerName,
      recipientIds: recipientIds,
      type: GameNotificationType.gameUpdated,
      title: 'üìù –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∏–≥—Ä–µ',
      message: '–ò–≥—Ä–∞ "$roomTitle" –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞: $changes',
      createdAt: DateTime.now(),
    );
  }

  /// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–∫–æ—Ä–æ–º –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã
  factory GameNotificationModel.gameStarting({
    required String id,
    required String roomId,
    required String roomTitle,
    required String organizerId,
    required String organizerName,
    required List<String> recipientIds,
    required int minutesLeft,
  }) {
    return GameNotificationModel(
      id: id,
      roomId: roomId,
      roomTitle: roomTitle,
      organizerId: organizerId,
      organizerName: organizerName,
      recipientIds: recipientIds,
      type: GameNotificationType.gameStarting,
      title: '‚è∞ –ò–≥—Ä–∞ —Å–∫–æ—Ä–æ –Ω–∞—á–Ω–µ—Ç—Å—è!',
      message: '–ò–≥—Ä–∞ "$roomTitle" –Ω–∞—á–Ω–µ—Ç—Å—è —á–µ—Ä–µ–∑ $minutesLeft –º–∏–Ω.',
      createdAt: DateTime.now(),
      additionalData: {'minutesLeft': minutesLeft},
    );
  }

  /// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã
  factory GameNotificationModel.gameStarted({
    required String id,
    required String roomId,
    required String roomTitle,
    required String organizerId,
    required String organizerName,
    required List<String> recipientIds,
  }) {
    return GameNotificationModel(
      id: id,
      roomId: roomId,
      roomTitle: roomTitle,
      organizerId: organizerId,
      organizerName: organizerName,
      recipientIds: recipientIds,
      type: GameNotificationType.gameStarted,
      title: 'üèê –ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!',
      message: '–ò–≥—Ä–∞ "$roomTitle" –Ω–∞—á–∞–ª–∞—Å—å. –£–¥–∞—á–∏!',
      createdAt: DateTime.now(),
    );
  }

  /// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∏–≥—Ä—ã
  factory GameNotificationModel.gameEnded({
    required String id,
    required String roomId,
    required String roomTitle,
    required String organizerId,
    required String organizerName,
    required List<String> recipientIds,
    String? winnerTeamName,
  }) {
    return GameNotificationModel(
      id: id,
      roomId: roomId,
      roomTitle: roomTitle,
      organizerId: organizerId,
      organizerName: organizerName,
      recipientIds: recipientIds,
      type: GameNotificationType.gameEnded,
      title: 'üèÜ –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!',
      message: winnerTeamName != null
          ? '–ò–≥—Ä–∞ "$roomTitle" –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü–æ–±–µ–¥–∏–ª–∞ –∫–æ–º–∞–Ω–¥–∞: $winnerTeamName!'
          : '–ò–≥—Ä–∞ "$roomTitle" –∑–∞–≤–µ—Ä—à–µ–Ω–∞.',
      createdAt: DateTime.now(),
      additionalData: winnerTeamName != null ? {'winner': winnerTeamName} : null,
    );
  }

  /// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ –∏–≥—Ä—ã
  factory GameNotificationModel.gameCancelled({
    required String id,
    required String roomId,
    required String roomTitle,
    required String organizerId,
    required String organizerName,
    required List<String> recipientIds,
    String? reason,
  }) {
    return GameNotificationModel(
      id: id,
      roomId: roomId,
      roomTitle: roomTitle,
      organizerId: organizerId,
      organizerName: organizerName,
      recipientIds: recipientIds,
      type: GameNotificationType.gameCancelled,
      title: '‚ùå –ò–≥—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞',
      message: reason != null
          ? '–ò–≥—Ä–∞ "$roomTitle" –æ—Ç–º–µ–Ω–µ–Ω–∞. –ü—Ä–∏—á–∏–Ω–∞: $reason'
          : '–ò–≥—Ä–∞ "$roomTitle" –æ—Ç–º–µ–Ω–µ–Ω–∞.',
      createdAt: DateTime.now(),
      additionalData: reason != null ? {'reason': reason} : null,
    );
  }

  /// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ –∏–≥—Ä–æ–∫–∞
  factory GameNotificationModel.playerJoined({
    required String id,
    required String roomId,
    required String roomTitle,
    required String organizerId,
    required String organizerName,
    required List<String> recipientIds,
    required String playerName,
  }) {
    return GameNotificationModel(
      id: id,
      roomId: roomId,
      roomTitle: roomTitle,
      organizerId: organizerId,
      organizerName: organizerName,
      recipientIds: recipientIds,
      type: GameNotificationType.playerJoined,
      title: 'üëã –ù–æ–≤—ã–π –∏–≥—Ä–æ–∫',
      message: '$playerName –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ "$roomTitle"',
      createdAt: DateTime.now(),
      additionalData: {'playerName': playerName},
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'roomId': roomId,
      'roomTitle': roomTitle,
      'organizerId': organizerId,
      'organizerName': organizerName,
      'recipientIds': recipientIds,
      'type': type.toString().split('.').last,
      'title': title,
      'message': message,
      'createdAt': Timestamp.fromDate(createdAt),
      'scheduledDateTime': scheduledDateTime != null 
          ? Timestamp.fromDate(scheduledDateTime!) 
          : null,
      'additionalData': additionalData,
      'isRead': isRead,
    };
  }

  factory GameNotificationModel.fromMap(Map<String, dynamic> map, String documentId) {
    return GameNotificationModel(
      id: documentId,
      roomId: map['roomId'] ?? '',
      roomTitle: map['roomTitle'] ?? '',
      organizerId: map['organizerId'] ?? '',
      organizerName: map['organizerName'] ?? '',
      recipientIds: List<String>.from(map['recipientIds'] ?? []),
      type: GameNotificationType.values.firstWhere(
        (e) => e.toString().split('.').last == map['type'],
        orElse: () => GameNotificationType.gameCreated,
      ),
      title: map['title'] ?? '',
      message: map['message'] ?? '',
      createdAt: (map['createdAt'] as Timestamp?)?.toDate() ?? DateTime.now(),
      scheduledDateTime: (map['scheduledDateTime'] as Timestamp?)?.toDate(),
      additionalData: map['additionalData'] != null 
          ? Map<String, dynamic>.from(map['additionalData']) 
          : null,
      isRead: map['isRead'] ?? false,
    );
  }

  /// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–∫–æ–Ω–∫—É –¥–ª—è —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  String get icon {
    switch (type) {
      case GameNotificationType.gameCreated:
        return 'üèê';
      case GameNotificationType.gameUpdated:
        return 'üìù';
      case GameNotificationType.gameStarting:
        return '‚è∞';
      case GameNotificationType.gameStarted:
        return 'üöÄ';
      case GameNotificationType.gameEnded:
        return 'üèÜ';
      case GameNotificationType.gameCancelled:
        return '‚ùå';
      case GameNotificationType.playerJoined:
        return 'üëã';
      case GameNotificationType.playerLeft:
        return 'üëã';
      case GameNotificationType.teamFormed:
        return 'üë•';
      case GameNotificationType.teamChanged:
        return 'üîÑ';
    }
  }

  /// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–≤–µ—Ç –¥–ª—è —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  String get colorHex {
    switch (type) {
      case GameNotificationType.gameCreated:
        return '#4CAF50'; // –∑–µ–ª–µ–Ω—ã–π
      case GameNotificationType.gameUpdated:
        return '#2196F3'; // —Å–∏–Ω–∏–π
      case GameNotificationType.gameStarting:
        return '#FF9800'; // –æ—Ä–∞–Ω–∂–µ–≤—ã–π
      case GameNotificationType.gameStarted:
        return '#8BC34A'; // —Å–≤–µ—Ç–ª–æ-–∑–µ–ª–µ–Ω—ã–π
      case GameNotificationType.gameEnded:
        return '#9C27B0'; // —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
      case GameNotificationType.gameCancelled:
        return '#F44336'; // –∫—Ä–∞—Å–Ω—ã–π
      case GameNotificationType.playerJoined:
        return '#00BCD4'; // –≥–æ–ª—É–±–æ–π
      case GameNotificationType.playerLeft:
        return '#607D8B'; // —Å–µ—Ä—ã–π
      case GameNotificationType.teamFormed:
        return '#3F51B5'; // –∏–Ω–¥–∏–≥–æ
      case GameNotificationType.teamChanged:
        return '#FF5722'; // –æ—Ä–∞–Ω–∂–µ–≤–æ-–∫—Ä–∞—Å–Ω—ã–π
    }
  }

  GameNotificationModel copyWith({
    String? id,
    String? roomId,
    String? roomTitle,
    String? organizerId,
    String? organizerName,
    List<String>? recipientIds,
    GameNotificationType? type,
    String? title,
    String? message,
    DateTime? createdAt,
    DateTime? scheduledDateTime,
    Map<String, dynamic>? additionalData,
    bool? isRead,
  }) {
    return GameNotificationModel(
      id: id ?? this.id,
      roomId: roomId ?? this.roomId,
      roomTitle: roomTitle ?? this.roomTitle,
      organizerId: organizerId ?? this.organizerId,
      organizerName: organizerName ?? this.organizerName,
      recipientIds: recipientIds ?? this.recipientIds,
      type: type ?? this.type,
      title: title ?? this.title,
      message: message ?? this.message,
      createdAt: createdAt ?? this.createdAt,
      scheduledDateTime: scheduledDateTime ?? this.scheduledDateTime,
      additionalData: additionalData ?? this.additionalData,
      isRead: isRead ?? this.isRead,
    );
  }
} 